#  .ebrc: file di configurazione per edbrowser verione 3.7.3
#  Questo è un file d' esempio
#  Questo file contiene password - sii sicuro che non sia leggibile da altri
#  chmod 600 .ebrc
#  (Ovviamente questo è un file pubblico che non ha password reali, ma il tuo le avrà.)

#  Prima gli account per le email; io ne ho diversi.
#  Il mio account primario, dal mio ISP.
#  Accedi a questo account con -m1.
#  L' account seguente è -m2, e così via
mail {
# Non fare il "fetch" da questo account quando si usa -f per il "fetch" da tutti gli account.
nofetch
#  Il server pop3 e il server smtp, non è necessario che siano gli stessi.
inserver = mail.comcast.net
outserver = smtp.comcast.net
#  login e password
login = kdahlke189603
password = elephant
#  Da chi viene questa email? Il tuo nome e un indirizzo di risposta.
#  Nota, ora è illegale contraffare email, quindi sii sicuro che il tuo nome
#  sia realmente il tuo o della tua azienda e assicurati che l' indirizzo di risposta
#  sia uno delle tue email o comunque sia inoltrato a te.
from = Karl Dahlke
reply = kdahlke189603@comcast.net
}

#  Il mio account email personale.
#  Questo è un sotto-account del mio account ISP primario.
mail {
inserver = mail.comcast.net
outserver = smtp.comcast.net
#  Questo è l' account di default quando invio email.
default
login = eklhad
password = zebra
from = Karl Dahlke
reply = eklhad@comcast.net
}

#  L' account di mia moglie
#  Lo controllo di tanto in tanto col suo permesso ovviamente.
mail {
#  Di default non fare assolutamente "fetch" di email da questo account.
nofetch
inserver = mail.comcast.net
outserver = smtp.comcast.net
login = kdwife
password = kangaroo
from = Wendy Dahlke
reply = kdwife@comcast.net
}

#  Il mio account di lavoro
mail {
#  L' abbreviazione per "eyemail" è definita in /etc/hosts.
#  Puoi fare in questo modo o usare il nome di dominio completo,
#  come fatto con comcast prima.
inserver = eyemail
outserver = eyemail
login = karl.dahlke@my-work-domain.com
password = cheetah
from = Karl Dahlke
reply = karl.dahlke@my-work-domain.com
}

#  account gmail, oggi molte persone ne hanno uno.
mail {
inserver = pop.gmail.com
outserver = smtp.gmail.com
secure
login = eklhad
password = rhinoceros
from = Karl Dahlke
reply = eklhad@gmail.com
}

#  Queste sono tutte le mie email.
#  Ora la mia rublica.
#  Il formato è  alias:email:other campi che non ci interessano
adbook=/home/mylogin/outside/adbook

#  Muovi in questa cartella quando recuperi le email, Dovrebbe essere un path assoluto.
maildir = /home/mylogin/mbox

#  Metti i file scaricati qui. Dovrebbe essere un path assoluto.
downdir = /home/mylogin/downloads

#  "Il barattolo di biscotti" - dove mettere i cooki.
#  Questo file contiene password, sii sicuro che sia 0600
#  Non modificare il file dei cookie a meno che non sai cosa stai facendo!
jar = /home/mylogin/outside/cookies

#  aspetta 30 secondi per una risposta dal server web
webtimer = 30
#  aspetta 3 minuti per una risposta dal server delle email
mailtimer = 180

#  Reindirizza le email in base al mittete o l' account del destinatario
fromfilter {
fred flintstone > fredmail
fred.flintstone@bedrock.us > fredmail
jerk@hotmail.com > x
word@m-w.com > -wod
}

tofilter {
support@my-side-business.com > support
sales@my-side-business.com > sales
@my-side-business.com > business
me@my-regular-dayjob.com > work
}

#  Descrivi i tipi di file e i plugin per eseguirli
plugin {
type = audio/basic
desc = file audio in un formato wave
suffix = wav,voc,au
content = audio/x-wav
#  %i è il file di input o un flusso di input da internet
program = play -q %i
}

#  Puoi usare mplayer o mpv, gli argometi sono gli stessi.
plugin {
type = audio/x-pn-realaudio
desc = streaming audio
protocol = rtsp,pnm,sdp,pls
suffix = rm,ra,ram,ogg,mp3,mp4,m3u,m3u8
urlmatch = .youtube.com/watch?
content = audio/x-scpls,audio/mpeg,application/pls+xml
program = /usr/bin/mpv --really-quiet %i
}

#  Qualche plugin "suona" il file, altri lo converto per "leggibilità".
#  Il parametro "outtype" è incato per ultimo.
#  Imposta outtype = h per html o t per testo.
#  Questo plugin è richiamato dal browser per interpretare un pdf.
plugin {
type = pdf
desc = pdf file
suffix = pdf
content = application/pdf
#  il programma non può accedere a stream, i file devono essere scaricati da Internet.
down_url
#  %o è il file di output temporaneo generato dal programma
program = pdftohtml -i -noframes %i %o >/dev/null
outtype = H
}

plugin {
type = Word doc
desc = Microsoft Word document, not docx
suffix = doc
content = application/msword
down_url
#  senza %o, il file di output è trasferito direttamente nel buffer.
program = catdoc %i
outtype = T
}

#  Fai riferimento al wiki di edbrowse per i plugin e gli script per accedere
#  ai file e cartelle dentro un archivio zip.

#  Server Proxy, analizza queste tre voci in ordine
#  Tre campi: protocollo dominio server
#  mycompany.com permette accesso diretto ai PC  delle risorse umane
#  tutte le altre richieste vanno attraverso i loro proxy.
proxy = http|https hr.mycompany.com direct
proxy = http|https|ftp * proxy.mycompany.com

#  Accesso al database - specifica la "sorgente dati", login e password.
datasource = retail,mylogin,mypassword

#  Sezioni della tabella clienti nel database di vendita.  
#  Vedi la documetazione di edbrowse per maggiori informazioni.
table {
    tname = customers
#  cnm è la mia misteriosa abbreviazione  per "nome cliente"
#  Qui voglio essere misterioso, dato che lo scriverò molto
    tshort = cnm
    cols = custnum,firstname,lastname
#  Specifica la chiave primaria, in questo caso, la prima colonna selezionata
    keycol = 1
}

table {
    tname = customers
#  Qui considero solo cliente e data di nascita
    tshort = cbd
    cols = birthdate,custnum
    keycol = 2
}


#  Un' abbondanza di siti usa javascript solo per effetti grafici.
#  Javascript tende ad essere complicato, per cui, generalmente, non lo
#  analizzo correttamente e potresti incappare in molti errori noiosi.
#  Puoi disabilitare javascript sito per sito.
#  Nota, meglio dire space.com piuttosto di www.space.com,
#  a meno che ci sia un foo.space.com dove veramente hai bisogno di javascript.
nojs = space.com
nojs = nasa.gov
nojs = paypal.com

#  Ogni volta che richiedi una pagina web da Internet,
#  il tuo browser identifica se stesso presso l' host.
#  Questo avviene automaticamente.
#  Edbrowse identifica se stesso come "edbrowse/3.4.8",
#  dove il numero dopo lo slash indica la versione corrente di edbrowse.
#  Tutto bello e buono, ma qualche sito non ha rispetto per edbrowse.
#  Puoi specificare un "agent" differente in questo file di configurazione,
#  e attivarli con il comando `ua' (user agent).
#  Usa le seguenti linee nel tuo file di configurazione,
#  puoi digitare ua1 per far finta di essere lynx e ua2 per fingere di essere Mozilla.
#  Digitare ua0 per ripristinare l'idenificazione standard di edbrowse.

agent = Lynx/2.8.4rel.1 libwww-FM/2.14
agent = Mozilla/4.0 (compatible; MSIE 5.5; Windows 98; Win 9x 4.90)

#  Ok, siamo pronti per scrivere il nostro primo script.
#  Iniziamo con qualcosa di semplice, cancellare un file
function+undos {
,s/\r$//
}

#  Che ne dite di una funzione per accedere a google.
#  É qualcosa che ognuno fa sempre.
#  Non è garantito che sia aggiornato;
#  Google cambia la sua inerfaccia web di volta in volta.
#  Infatti ogni script di "accesso web" richiede manutenzione,
#  seguendo l' evoluzione del sito in esame.
#  ~0 sta per tutti gli argomenti, in altre parole, il resto della linea.
#  Quindi  <gg elefanti tigri   contatterà google,
#  cercando elefanti e tigli insieme.
function+gg {
b http://www.google.com
/<>/ i=~0
/</ i1*
/^About/+2
}

#  consulta il dizionario mariam-webster, ~1 è il parametro 1, la parola da consultare.
#  <mw elephant
function+mw {
b http://www.merriam-webster.com/dictionary/~1
}

