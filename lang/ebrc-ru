#  .ebrc: образец файла конфигурации для edbrowse 3.7.3

#  почтовый аккаунт; можете иметь несколько.
#  Аккаунт Gmail, у большинства людей есть один в настоящее время.
#  Это доступ POP3. Чтобы получить и читать почту из этого аккаунта:
#  edbrowse -fm1
mail {
inserver = pop.gmail.com
outserver = smtp.gmail.com
secure
login = edbrowse
password = rhinoceros
from = Donald Duck
reply = edbrowse@gmail.com
}

#  IMAP-доступ к вашему аккаунту Gmail.
#  Если это второй аккаунт в этом файле, IMAP-доступ будет через:
#  edbrowse -f2
mail {
imap
inserver = imap.gmail.com
outserver = smtp.gmail.com
secure
login = edbrowse
password = rhinoceros
from = Donald Duck
reply = edbrowse@gmail.com
}

#  Добавить адресную книгу.
#adbook=/home/mylogin/outside/adbook

#  Почтовый ящик. Должен быть абсолютный путь.
#maildir = /home/mylogin/mbox

#  Помещать скачанные файлы сюда. Должен быть абсолютный путь.
# downdir = /home/mylogin/downloads
# Если отсутствует, скачаем в текущее место.

#  Файл сохраняющий cookie
#jar = /home/mylogin/outside/cookies

# директория сохраняющая кеш edbrowse, и размер этого кеша в мегабайтах
# cachedir = /b3/ebcache
# cachesize = 200

#  ждать ответа от веб сервера 30 секунд
webtimer = 30
#  ждать ответа от сервера почты 3 минуты
mailtimer = 180

#  Перенаправить почту на основе отправителя или адресата.
fromfilter {
fred flintstone > fredmail
fred.flintstone@bedrock.us > fredmail
jerk@hotmail.com > x
word@m-w.com > -wod
}

# tofilter { }

#  Опиши типы MIME и соответствующие им плагины.
plugin {
type = audio/basic
desc = audio file in a wave format
suffix = wav,voc,au,ogg
content = audio/x-wav
#  %i - это временный входной файл создан edbrowse, или URL
program = play -q %i
}

plugin {
type = audio/mp3
desc = audio file in mp3 format
suffix = mp3
content = audio/mpeg
program = mpg123 -q -C %i
}

plugin {
type = audio/x-pn-realaudio
desc = streaming audio
protocol = rtsp,pnm,sdp
suffix = rm,ra,ram,m3u8
urlmatch = youtube.com/watch?|youtube.com/embed/
content = audio/x-scpls,application/pls+xml
program = /usr/bin/mpv --really-quiet --load-unsafe-playlists %i
}

#  Этот плагин отображает файл вместо его воспроизведения.
plugin {
type = pdf
desc = pdf file
suffix = pdf
content = application/pdf
program = pdftohtml -i -noframes %i %o >/dev/null
#  указать, что выход - это HTML, не текст
outtype = H
#  указать, что данные должны быть загружены; pdftohtml не принимает URL
down_url
}

plugin {
type = rtf
desc = rich text file
suffix = rtf
content = application/rtf
down_url
program = catdoc %i
# это текст, не HTML
outtype = T
}

#  Every time you fetch a web page from the internet,
#  your browser identifies itself to the host.
# Здесь несколько дополнительных агентов, по умолчанию - edbrowse 3.7.3
agent = Lynx/2.8.4rel.1 libwww-FM/2.14
agent = Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)

#  Ok, we're ready to write our first script.
#  How about a function to access google.
#  So   <gg elephants tigers   will call up google,
#  looking for elephants and tigers together.
function+gg {
b http://www.google.com
/<>/ i=~0
/</ i1*
/h3/p
#  Search results by h3 heading only works if google recognizes your browser,
#  so you need to spoof to IE7.
}

# поиск Google не требует JavaScript
nojs = google.com

#  Поиск по словаре Merriam-Webster, ~1 - это параметр 1 - слово, которое нужно найти.
#  <mw elephant
function+mw {
b http://www.merriam-webster.com/dictionary/~1
/spelling suggestion/X
if(?) {
/^h2 Definition/X
}
/./p
}

#  Эта функция запускается при запуске edbrowse.
function:init {
# сделать директории доступными для записи, чтобы вы могли переименовать или удалять файлы
dw
# Показывать размер файлов в списке директорий
ls=s
# лимит знаков при отображении строки; строки могут быть сколь угодно длинными внутри.
ll 700
# другие личные настройки
#  you may want ua2, so google searches have headings, and perhaps for other websites.
#  Никто не знает что такое edbrowse.
}

# и многое другое...
